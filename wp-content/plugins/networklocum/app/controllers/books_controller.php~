<?php
class BooksController extends MvcPublicController {
	
	public function index() {
		$this->set('mylayout', 'client');	
  	}
	
	public function editbook(){
		global $wpdb;
	 	$this->set('mylayout', 'client');
 	 	$this->load_model('Bookauthor');
    		$arrAuthors =  $this->Bookauthor->find();    
		$this->set('arrAuthors', $arrAuthors);

	 	$this->load_model('Bookpublisher');
    		$arrPublishers =  $this->Bookpublisher->find();    
		$this->set('arrPublishers', $arrPublishers);

	 	$this->load_model('Bookcategory');
    		$arrbookcategories =  $this->Bookcategory->find();    
		//echo "<pre>"; print_r($arrbookcategories);
		$this->set('arrbookcategories', $arrbookcategories);
		
		$this->load_model('Bookdoner');
    		$arrbookdoners =  $this->Bookdoner->find();    
		//echo "<pre>"; print_r($arrbookcategodies);
		$this->set('arrbookdoners', $arrbookdoners);

		$sqlqry="SELECT * FROM wp_bookshelfs LIMIT 0 , 10000 ";
 		$arrshelflist=$wpdb->get_results($sqlqry);
  		$this->set('arrshelflist', $arrshelflist);

 
		//echo "<pre>"; print_r($_POST);
		
		$this->load_model('Book');
		$bid      = $this->params['id'];  		

		if(isset($_POST['save'])){
			

		//$my_date = explode('-',$_POST['bookcreated_date']);
 		//$_POST['bookcreated_date'] = $my_date[2].'-'.$my_date[1].'-'.$my_date[0];
		unset($_POST['save']);
		$tempupdatebookstatus = $this->Book->update($bid,$_POST);
		 
   		$this->flash('success', 'Successfully book updated!');
		
		 $url= esc_url( home_url( '/' ) ).'books/createbook';
		 	$this->redirect($url);
		


	  	}
		
		 global $wpdb;
			$pqury="SELECT a.id, a.booktitle,b.bookauthorname from wp_books a, wp_bookauthors b where a.author_id  = b.id order by a.id desc  ";
		//echo  $pqury;
		 $arrbookList=$wpdb->get_results($pqury);
		//print_r( $arrbookList);

  		$this->set('arrbooks',  $arrbookList); 

		$bookinfo =  $this->Book->find(array('conditions' => array('Book.id' => $bid)));
		//echo "<pre>";print_r($bookinfo);
		$this->set('bookinfo',$bookinfo['0']);
	
	}

	public function createbookissue() {

		$this->set('mylayout', 'client');

	 	$this->load_model('Book');
  		
		global $wpdb;
			$pqury="SELECT a.id, a.booktitle,b.bookpublishername from wp_books a, wp_bookpublishers b where a.bookpublisher_id  = b.id and a.bookstatus=0 ";
			//echo $pqury;
		 $temparrbookList=$wpdb->get_results($pqury);

 		$arrBooklist=array();
		$k=0;	
		foreach($temparrbookList as $robj){
		    $arrBooklist[$k]['id'] = $robj->id;
		    $arrBooklist[$k]['title'] = $robj->booktitle.'--'.$robj->bookpublishername;
		    $k = $k + 1;	
		}
		$this->set('arrBooklist',$arrBooklist);	
		//echo "<pre>";print_r($arrBooklist);
	 	$this->load_model('member');
    		$arrmembers =  $this->member->find();    
		$this->set('arrmembers', $arrmembers);
 
 
		//echo "<pre>"; print_r($_POST); echo "</pre>";
		
		$this->load_model('Book');

		if(isset($_POST['save'])){
			
		$this->load_model('Bookissuedetail');
		 
		//$my_date = explode('-',$_POST['bookcreated_date']);
 		//$_POST['bookcreated_date'] = $my_date[2].'-'.$my_date[1].'-'.$my_date[0];
		unset($_POST['save']);
		
		$qry="SELECT max(id)+1 as ltid from wp_bookissuedetails";
		//echo $pqury;
		//echo "murthy";
		$latestnumber=$wpdb->get_results($qry);
		//print_r($latestnumber);
		$testid =  $latestnumber[0]->ltid;
		$_POST['bookreceivedstatus']   = 1;									
		$_POST['bookreceipt_no'] = $testid;
    		$this->Bookissuedetail->save($_POST);

 		 $pqry="UPDATE wp_books SET bookstatus = 1 where id = ".$_POST['book_id'];			
		$wpdb->query($pqry); 
  		$this->flash('success', 'Successfully book issued to selected memeber!');
			//$this->refresh();
		
	  	}
		
		$params    = $this->params;
    
		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
		$params['joins']   = array('Bookpublisher');
                $params['includes']  = array('Bookpublisher');
 	        $params['selects']    =  array('Bookpublisher.bookpublishername','Book.id','Book.booktitle');
 
  		$params['order']      = 'Book.id';
		//print_r($params);	
		$collection = $this->Book->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbooks',  $collection['objects']);

		
			// getting data from 
	 	$sqlqry="SELECT a.id,b.id as bookissuedId, a.booktitle, b.member_id, b.bookissued_date, b.bookdue_date, c.name, c.contact
FROM wp_books AS a, wp_bookissuedetails AS b, wp_members AS c
WHERE a.id = b.book_id
AND b.member_id = c.id
AND a.bookstatus =1
  
GROUP BY a.id
LIMIT 0 , 10000 ";
 
		$arrbookissuList=$wpdb->get_results($sqlqry);
    		$this->set('arrbookissuList', $arrbookissuList);
 	

	
 	}

	public function createcategory(){
	
		global $wpdb;		
 		$this->set('mylayout', 'client');

	 	$this->load_model('Bookcategory');
  		
		if(isset($_POST['save'])){
	 		 $this->Bookcategory->save($_POST);
 			$this->flash('success', 'Successfully Book Category saved!');
 		}
		$params       = $this->params;
 		$arrbookcategories =  $this->Bookcategory->find();    
		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
 	        $params['selects']    = array('Bookcategory.*');		
		$params['order']      = 'Bookcategory.bookcategoryname';
		//print_r($params);	
		$collection = $this->Bookcategory->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbookcategories',  $collection['objects']);

 	}

 	public function editcategory(){
	
		global $wpdb;		
 		$this->set('mylayout', 'client');

	 	$this->load_model('Bookcategory');
		$catid      = $this->params['id'];  		
		$bookcategory =  $this->Bookcategory->find(array('conditions' => array('Bookcategory.id' => $catid)));
		//echo "<pre>";print_r($bookcategory);
 
		$this->set('bookcategory',$bookcategory[0]);
		if(isset($_POST['save'])){
			unset($_POST['save']);
	 		 $this->Bookcategory->update($catid,$_POST);
 			$this->flash('success', 'Successfully Book Category saved!');
 		}
		
 		
		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
 	        $params['selects']    = array('Bookcategory.*');		
		$params['order']      = 'Bookcategory.bookcategoryname';
		//print_r($params);	
		$collection = $this->Bookcategory->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbookcategories',  $collection['objects']);
 	}

	public function deletecategory(){
		
		$this->set('mylayout', 'client');
 		
		$this->load_model('Bookcategory');
		$this->Bookcategory->delete($this->params['id']);
		$this->flash('notice', 'Successfully category deleted!');
		
		$url= esc_url( home_url( '/' ) ).'books/createcategory';
		$this->redirect($url);
	}

	public function deleteshelf(){
		
		$this->set('mylayout', 'client');
 		
		global $wpdb;
		$tid = $this->params['id'];
		 echo  $pqry1="Delete from wp_bookshelfs where id = $tid  ";  				
		 
		if ( $wpdb->query($pqry1)) 
		echo "<script> alert('Successfully shelf removed !'); </script>";
 		//$this->flash('notice', 'Successfully shelf removed !');
		
		$url= esc_url( home_url( '/' ) ).'books/createshelf';
		$this->redirect($url);
	}

	public function createauthor(){
	
		global $wpdb;		
 		$this->set('mylayout', 'client');

	 	$this->load_model('Bookauthor');
  		
		if(isset($_POST['save'])){
	 		 $this->Bookauthor->save($_POST);
 			$this->flash('success', 'Successfully Book author saved!');
 		}
		$params       = $this->params;
 		$arrbookcategories =  $this->Bookauthor->find();    
		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
 	        $params['selects']    = array('Bookauthor.*');		
		$params['order']      = 'Bookauthor.bookauthorname';
		//print_r($params);	
		$collection = $this->Bookauthor->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbookauthors',  $collection['objects']);

 	}

	public function editauthor(){
	
		global $wpdb;		
 		$this->set('mylayout', 'client');

	 	$this->load_model('Bookauthor');
		$atid      = $this->params['id'];  		
		$bookauthor =  $this->Bookauthor->find(array('conditions' => array('Bookauthor.id' => $atid)));
		$this->set('bookauthor',$bookauthor[0]);

		if(isset($_POST['save'])){
			unset($_POST['save']);
	 		 $this->Bookauthor->update($atid,$_POST);
 			$this->flash('success', 'Successfully Book author saved!');
 		}
		
 		
		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
 	        $params['selects']    = array('Bookauthor.*');		
		$params['order']      = 'Bookauthor.bookauthorname';
		//print_r($params);	
		$collection = $this->Bookauthor->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbookauthors',  $collection['objects']);
 	}

	public function deleteauthor(){
		
		$this->set('mylayout', 'client');
 		
		$this->load_model('Bookauthor');
		$this->Bookauthor->delete($this->params['id']);
		$this->flash('notice', 'Successfully book author deleted!');
		
		$url= esc_url( home_url( '/' ) ).'books/createauthor';
		$this->redirect($url);
	}

	public function createpublisher(){
	
		global $wpdb;		
 		$this->set('mylayout', 'client');

	 	$this->load_model('Bookpublisher');
  		
		if(isset($_POST['save'])){
	 		 $this->Bookpublisher->save($_POST);
 			$this->flash('success', 'Successfully Book publisher saved!');
 		}
		$params       = $this->params;
 		$arrbookcategories =  $this->Bookpublisher->find();    
		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
 	        $params['selects']    = array('Bookpublisher.*');		
		$params['order']      = 'Bookpublisher.bookpublishername';
		//print_r($params);	
		$collection = $this->Bookpublisher->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbookpublishers',  $collection['objects']);

 	}

	public function editpublisher(){
	
		global $wpdb;		
 		$this->set('mylayout', 'client');

	 	$this->load_model('Bookpublisher');
  		
		if(isset($_POST['save'])){
			unset($_POST['save']);
	 		 $this->Bookpublisher->save($_POST);
 			$this->flash('success', 'Successfully Publisher saved!');
 		}
		$params  = $this->params;
		$pid     = $this->params['id'];  		
		$bookpublisher =  $this->Bookpublisher->find(array('conditions' => array('Bookpublisher.id' => $pid)));

 		$this->set('bookpublisher',$bookpublisher[0]);
		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
 	        $params['selects']    = array('Bookpublisher.*');		
		$params['order']      = 'Bookpublisher.bookpublishername';
		//print_r($params);	
		$collection = $this->Bookpublisher->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbookpublishers',  $collection['objects']);

 	}

	public function deletepublisher(){
	 	$this->set('mylayout', 'client');
 	 	$this->load_model('Bookpublisher');
		$this->Bookpublisher->delete($this->params['id']);
		$this->flash('notice', 'Successfully book publisher deleted!');
		
		$url= esc_url( home_url( '/' ) ).'books/createpublisher';
		$this->redirect($url);
	}

	public function createbookdoner(){
	
  		$this->set('mylayout', 'client');

	 	$this->load_model('Bookdoner');
  		
		if(isset($_POST['save'])){
	 		 $this->Bookdoner->save($_POST);
 			$this->flash('success', 'Successfully Book doner saved!');
 		}
		$params       = $this->params;
 		$arrbookcategories =  $this->Bookdoner->find();    
		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
 	        $params['selects']    = array('Bookdoner.*');		
		$params['order']      = 'Bookdoner.bookdonername';
		//print_r($params);	
		$collection = $this->Bookdoner->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbookdoners',  $collection['objects']);

 	}

	public function editbookdoner(){
	
		global $wpdb;		
 		$this->set('mylayout', 'client');

	 	$this->load_model('Bookdoner');
		$atid      = $this->params['id'];  		
		
		if(isset($_POST['save'])){
			unset($_POST['save']);
	 		 $this->Bookdoner->update($atid,$_POST);
 			$this->flash('success', 'Successfully Book doner Updated!');
 		}
		
 		$bookdoner =  $this->Bookdoner->find(array('conditions' => array('Bookdoner.id' => $atid)));
		$this->set('bookdoner',$bookdoner[0]);

		//print_r($arrbookcategories);
		$params['page']  = empty($this->params['page']) ? 1 : $this->params['page'];
 	        $params['selects']    = array('Bookdoner.*');		
		$params['order']      = 'Bookdoner.bookdonername';
		//print_r($params);	
		$collection = $this->Bookdoner->paginate($params);
		$this->set_pagination($collection);
		//echo "<pre>";	print_r($collection);
  		$this->set('arrbookdoners',  $collection['objects']);
 	}

	public function deletebookdoner(){
		
		$this->set('mylayout', 'client');
 		
		$this->load_model('Bookdoner');
		$this->Bookdoner->delete($this->params['id']);
		$this->flash('notice', 'Successfully book doner deleted!');
		
		$url= esc_url( home_url( '/' ) ).'books/createbookdoner';
		$this->redirect($url);
	}

	public function deletebook(){
		
		$this->set('mylayout', 'client');
 		
		$this->load_model('Book');
		$this->Book->delete($this->params['id']);
		$this->flash('notice', 'Successfully book  deleted!');
 		$url= esc_url( home_url( '/' ) ).'books/createbook';
		$this->redirect($url);
	}
	
	public function createbook() {
		global $wpdb;
		$this->set('mylayout', 'client');

	 	$this->load_model('Bookauthor');
    		$arrAuthors =  $this->Bookauthor->find();    
		$this->set('arrAuthors', $arrAuthors);

	 	$this->load_model('Bookpublisher');
    		$arrPublishers =  $this->Bookpublisher->find();    
		$this->set('arrPublishers', $arrPublishers);

	 	$this->load_model('Bookcategory');
    		$arrbookcategories =  $this->Bookcategory->find();    
		//echo "<pre>"; print_r($arrbookcategories);
		$this->set('arrbookcategories', $arrbookcategories);
		
		$this->load_model('Bookdoner');
    		$arrbookdoners =  $this->Bookdoner->find();    
		//echo "<pre>"; print_r($arrbookcategodies);
		$this->set('arrbookdoners', $arrbookdoners);
 
		//echo "<pre>"; print_r($_POST);
		
		$this->load_model('Book');

		if(isset($_POST['save'])){
			

		//$my_date = explode('-',$_POST['bookcreated_date']);
 		//$_POST['bookcreated_date'] = $my_date[2].'-'.$my_date[1].'-'.$my_date[0];
		unset($_POST['id']);
		unset($_POST['save']);

		$this->Book->save($_POST);
		$lastbook_id = $this->Book->insert_id;
	 	$_POST['bookno']="OML/".$lastbook_id;

		 $pqry1="UPDATE wp_books SET bookno ='".$_POST['bookno']."'   where id = $lastbook_id ";  				
		
		$wpdb->query($pqry1); 
		$this->flash('success', 'Successfully book created!');
			
 		echo "<script> alert('Book Number OML/".$lastbook_id."');</script>";
	//$this->refresh();
	  	}
		
		$sqlqry="SELECT * FROM wp_bookshelfs  order by ID Desc ";
 
		$arrshelflist=$wpdb->get_results($sqlqry);
 		echo "<pre>"; print_R($arrshelflist);
		$this->set('arrshelflist', $arrshelflist);

		$params    = $this->params;
    
		//print_r($arrbookcategories);
		 global $wpdb;
			$pqury="SELECT a.id, a.booktitle,b.bookauthorname from wp_books a, wp_bookauthors b where a.author_id  = b.id order by a.id desc ";
			//echo $pqury;
		 $arrbookList=$wpdb->get_results($pqury);
		//print_r( $arrbookList);

  		$this->set('arrbooks',  $arrbookList);
	
 	}

	public function dashboard(){
		$this->set('mylayout', 'client');
	}
	
	public function returnissuedbook(){
		$this->set('mylayout', 'client');
		$atid      = $this->params['id'];  		
		$this->load_model('Bookissuedetail');
		$returnbook =  $this->Bookissuedetail->find(array('conditions' => array('Bookissuedetail.id' => $atid)));
		//echo '<pre>'; print_r($returnbook);
		$this->set('returnbook',$returnbook[0]);
		
	 	$this->load_model('Book');
  		
		global $wpdb;
			$pqury="SELECT a.id, a.booktitle,b.bookpublishername from wp_books a, wp_bookpublishers b where a.bookpublisher_id  = b.id ";
			//echo $pqury;
		 $temparrbookList=$wpdb->get_results($pqury);

 		$arrBooklist=array();
		$k=0;	
		foreach($temparrbookList as $robj){
		    $arrBooklist[$k]['id'] = $robj->id;
		    $arrBooklist[$k]['title'] = $robj->booktitle.'--'.$robj->bookpublishername;
		    $k = $k + 1;	
		}
		$this->set('arrBooklist',$arrBooklist);	
		//echo "<pre>";print_r($arrBooklist);
	 	$this->load_model('member');
    		$arrmembers =  $this->member->find();    
		$this->set('arrmembers', $arrmembers);
 
 
		//echo "<pre>"; print_r($_POST);
		
		$this->load_model('Book');

		if(isset($_POST['save'])){
	  	//$my_date = explode('-',$_POST['bookcreated_date']);
 		//$_POST['bookcreated_date`'] = $my_date[2].'-'.$my_date[1].'-'.$my_date[0];
		 
		unset($_POST['save']);
 
		$pqry="UPDATE wp_bookissuedetails SET bookreceivedstatus  = 0,bookreceived_date  = '".$_POST['bookreceived_date'] ."' where id = $atid ";  			echo $pqry;
		$wpdb->query($pqry);

		$testid =$_POST['book_id'];
		echo $pqry1="UPDATE wp_books SET bookstatus  = 0  where id = $testid ";  				
		
		$wpdb->query($pqry1); 
  		$this->flash('success', 'Successfully book received from selected memeber!');

			//$this->refresh();
	  	}
		
		// getting data from 
	 	$sqlqry="SELECT a.id,b.id as bookissuedId, a.booktitle, b.member_id, b.bookissued_date, b.bookdue_date, c.name, c.contact
FROM wp_books AS a, wp_bookissuedetails AS b, wp_members AS c
WHERE a.id = b.book_id
AND b.member_id = c.id
AND a.bookstatus =1
 $condion
GROUP BY a.id
LIMIT 0 , 10000 ";
 
		$arrbookissuList=$wpdb->get_results($sqlqry);
    		$this->set('arrbookissuList', $arrbookissuList);
 	
		//echo "<pre>"; print_r($arrbookissuList);
		 
	
	} 
	
	public function listavailablebooks(){
		$this->set('mylayout', 'client');
		$search_field = $_POST['search_id'];
		$search_data = $_POST['search_data'];
		
		$condion="";
		if($search_field == 'booktitle')
			$condion=" AND lower(a.$search_field) LIKE lower('%$search_data%')";
		
		if($search_field == 'bookcategoryname')
			$condion=" AND  lower(d.$search_field) LIKE lower('%$search_data%')";

		if($search_field == 'bookdonername')
			$condion=" AND  lower(e.$search_field) LIKE lower('%$search_data%')";


		if($search_field == 'bookauthorname')
			$condion=" AND  lower(b.$search_field) LIKE lower('%$search_data%')";

		if($search_field == 'bookpublishername')
			$condion=" AND  lower(c.$search_field) LIKE lower('%$search_data%')";


// $search_field == 'bookpublisher_id' || $search_field == 'bookdoner_id')
			global $wpdb;
		//$sqlqry = "Select * from wp_books  $condion   LIMIT 0,10000 ";
		 
		 //echo $condion;
	 $sqlqry="SELECT a.id, a.booktitle,a.bookstatus, b.bookauthorname, c.bookpublishername, d.bookcategoryname, a.shelf_id, a.language_id, e.bookdonername
FROM wp_books AS a, wp_bookauthors AS b, wp_bookpublishers AS c, wp_bookcategories AS d, wp_bookdoners AS e
WHERE a.author_id = b.id
AND a.bookpublisher_id = c.id
AND a.category_id = d.id
 $condion
GROUP BY a.id
LIMIT 0 , 10000 ";

			

/*	
 	$sqlqry = "SELECT DISTINCT a.id, a.booktitle, b.bookpublishername,a.bookstatus
FROM wp_books a, wp_bookpublishers b
WHERE a.bookpublisher_id = b.id LIMIT 0 , 100 ";
*/
		$arravailableist=$wpdb->get_results($sqlqry);
		//echo "<pre>"; print_r($arravailableist);	echo "</pre>"; 
    		$this->set('arravailableist', $arravailableist);

		 
	}

	
	public function listduebooks(){
		$this->set('mylayout', 'client');
		$search_field = $_POST['search_id'];
		$search_data = $_POST['search_data'];
		
		$condion="";
		if($search_field == 'booktitle')
			$condion=" AND lower(a.$search_field) LIKE lower('%$search_data%')";
		
			
		if($search_field == 'name')
			$condion=" AND lower(c.$search_field) LIKE lower('%$search_data%')";

if($search_field == 'bookdue_date')
			$condion=" AND b.$search_field >= '%$search_data%'";
		 

		global $wpdb;

	 	 
	//$condion;
	 $sqlqry="SELECT a.id, a.booktitle, b.member_id, b.bookissued_date, b.bookdue_date, c.name, c.contact
FROM wp_books AS a, wp_bookissuedetails AS b, wp_members AS c
WHERE a.id = b.book_id
AND b.member_id = c.id
AND a.bookstatus =1
 $condion
GROUP BY a.id
LIMIT 0 , 10000 ";
 
/*	
 	$sqlqry = "SELECT DISTINCT a.id, a.booktitle, b.bookpublishername,a.bookstatus
FROM wp_books a, wp_bookpublishers b
WHERE a.bookpublisher_id = b.id LIMIT 0 , 100 ";
*/
		$arravailableist=$wpdb->get_results($sqlqry);
		//echo "<pre>"; print_r($arravailableist);	echo "</pre>"; 
    		$this->set('arravailableist', $arravailableist);
 
	}
	

public function printissuedbook (){
		$this->set('mylayout', 'client');
		$atid      = $this->params['id'];  		
		$this->load_model('Bookissuedetail');
		$returnbook =  $this->Bookissuedetail->find(array('conditions' => array('Bookissuedetail.id' => $atid)));
		//echo '<pre>'; print_r($returnbook);
		$this->set('returnbook',$returnbook[0]);
		
	 	$this->load_model('Book');
  		
		global $wpdb;
			$pqury="SELECT a.id, a.booktitle,b.bookpublishername from wp_books a, wp_bookpublishers b where a.bookpublisher_id  = b.id ";
			//echo $pqury;
		 $temparrbookList=$wpdb->get_results($pqury);

 		$arrBooklist=array();
		$k=0;	
		foreach($temparrbookList as $robj){
		    $arrBooklist[$k]['id'] = $robj->id;
		    $arrBooklist[$k]['title'] = $robj->booktitle.'--'.$robj->bookpublishername;
		    $k = $k + 1;	
		}
		$this->set('arrBooklist',$arrBooklist);	
		//echo "<pre>";print_r($arrBooklist);
	 	$this->load_model('member');
    		$arrmembers =  $this->member->find();    
		$this->set('arrmembers', $arrmembers);
 
 
		//echo "<pre>"; print_r($_POST);
		
		$this->load_model('Book');

 		
		// getting data from 
	 	$sqlqry="SELECT a.id,b.id as bookissuedId, a.booktitle, b.member_id, b.bookissued_date, b.bookdue_date, c.name, c.contact
FROM wp_books AS a, wp_bookissuedetails AS b, wp_members AS c
WHERE a.id = b.book_id
AND b.member_id = c.id
AND a.bookstatus =1
 $condion
GROUP BY a.id
LIMIT 0 , 10000 ";
 
		$arrbookissuList=$wpdb->get_results($sqlqry);
    		$this->set('arrbookissuList', $arrbookissuList);
 	
		//echo "<pre>"; print_r($arrbookissuList);
		 
	
	}
	
	public function  createshelf(){
		$this->set('mylayout', 'client');
	 
		global $wpdb;
		$sqlqryc="SELECT * FROM wp_bookcategories LIMIT 0 , 10000 ";
 
		$arrbookcategories=$wpdb->get_results($sqlqryc);
	
		$arrbookcategoriesLst = array();
		foreach($arrbookcategories as $row){
		$arrbookcategoriesLst[$row->id]= $row->bookcategoryname;
		}	
		//	echo "<pre>";	print_r($arrbookcategoriesLst);
		$this->set('arrbookcategoriesLst', $arrbookcategoriesLst);
		$this->set('arrbookcategories', $arrbookcategories);
	
 	 
		// echo"<pre>"; print_r($_POST);
		$shelf_no = $_POST['shelf_no'];
		
		//checking for shelfname avalibles		
		$check=0;
			
	
		if(isset($_POST['save']) ){

	  $sqlqrysl="SELECT count(id) as cnt FROM wp_bookshelfs where lower(shelf_no) like lower('$shelf_no') ";
 
		  $arrshavl=$wpdb->get_results($sqlqrysl);
		 
		if( $arrshavl[0]->cnt >=1){
		 	  "<script>alert('shelf name already exist please');</script>";
		   $check=1;
		}	
		$scategrys =implode("*", $_POST['category_id']);

		if( $check==0){
 
		  $pqry="INSERT INTO wp_bookshelfs  (shelf_no,category_id) values('$shelf_no','$scategrys')";	
		  $wpdb->query($pqry); 		
 		
			 
			$this->flash('success', 'Successfully shelf created!');
	 		 
	  	}}
	
		$sqlqry="SELECT * FROM wp_bookshelfs LIMIT 0 , 10000 ";
 
		$arrshelflist=$wpdb->get_results($sqlqry);
 
		$this->set('arrshelflist', $arrshelflist);
		

 	}


	public function  editshelf(){
		$this->set('mylayout', 'client');
	 
		global $wpdb;
		$sqlqryc="SELECT * FROM wp_bookcategories LIMIT 0 , 10000 ";
  		$arrbookcategories=$wpdb->get_results($sqlqryc);
 
		$arrbookcategoriesLst = array();
		foreach($arrbookcategories as $row){
		$arrbookcategoriesLst[$row->id]= $row->bookcategoryname;
		}	
		//	echo "<pre>";	print_r($arrbookcategoriesLst);
		$this->set('arrbookcategoriesLst', $arrbookcategoriesLst);
		$this->set('arrbookcategories', $arrbookcategories);
	  
		// echo"<pre>"; print_r($_POST);
		$shelf_no = $_POST['shelf_no'];
		
		//checking for shelfname avalibles		
		$check=0;
			
	
		if(isset($_POST['save']) ){

	 	 $sqlqrysl="SELECT count(id) as cnt FROM wp_bookshelfs where lower(shelf_no) like lower('$shelf_no') ";
 
		  $arrshavl=$wpdb->get_results($sqlqrysl);
		 
		
		$scategrys =implode("*", $_POST['category_id']);

 			
 	
		  $pqry="INSERT INTO wp_bookshelfs  (shelf_no,category_id) values('$shelf_no','$scategrys')";	
		  $wpdb->query($pqry); 		
 		
			 
			$this->flash('success', 'Successfully shelf created!');
	 	 }

		// for listing...
		$sqlqry="SELECT * FROM wp_bookshelfs LIMIT 0 , 10000 ";
 		$arrshelflist=$wpdb->get_results($sqlqry);
  		$this->set('arrshelflist', $arrshelflist);

	
		//reading data for edit.
		$atid      = $this->params['id'];  	
		$sqlqryf="SELECT * FROM wp_bookshelfs  Where id=$atid";
 		$arrshelfrec=$wpdb->get_results($sqlqryf);
  		$this->set('arrshelfrec', $arrshelfrec);
	 
 	}  

}

?>
